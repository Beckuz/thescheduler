{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["locales","require","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","myEventsList","start","Date","end","title","sessions","data","map","course","time","room","teacher","App","className","events","startAccessor","endAccessor","style","height","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w1eAUMA,EAAU,CACd,QAASC,EAAQ,KAGbC,EAAYC,YAAiB,CACjCC,WACAC,UACAC,gBACAC,WACAP,YAIIQ,EAAe,CACnB,CAAEC,MAAO,IAAIC,KAAK,uBAChBC,IAAK,IAAID,KAAK,uBACdE,MAAO,gBAGPC,EAAYC,EAAKD,SAASE,KAAI,YAAwC,IAAtCC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,KAAKN,EAAwB,EAAxBA,IAAKO,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACpD,MAAO,CACHP,MAAOI,EACPP,MAAO,IAAIC,KAAKO,GAChBN,IAAK,IAAID,KAAKC,GACdO,KAAMA,EACNC,QAASA,MAYN,SAASC,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACEnB,UAAWA,EACXoB,OAAQT,EACRU,cAAc,QACdC,YAAY,MACZC,MAAO,CAAEC,OAAQ,SAbvBlB,EAAamB,SC1Cf,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3411861e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n//import \"react-big-calendar/lib/sass/styles\";\nimport  data from \"./default.json\"\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\n// This is where the events will go, it is best to make a seperate .json file which makes every class into an event\nconst myEventsList = [\n  { start: new Date(\"2022-03-18T10:00:00\"),\n    end: new Date(\"2022-03-18T11:00:00\"),\n    title: \"test2 event\"}\n];\n\nlet sessions = (data.sessions.map(({course, time,end, room, teacher}) => {\n        return {\n            title: course,\n            start: new Date(time),\n            end: new Date(end),\n            room: room,\n            teacher: teacher\n        }\n    }\n))\n\n\n\n  myEventsList.concat(\n  )\n\n\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Calendar\n        localizer={localizer}\n        events={sessions}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500 }}\n\n      />\n\n\n    </div>\n\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}