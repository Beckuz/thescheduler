{"version":3,"sources":["Components/Navigation.jsx","Components/Footer.jsx","Components/Schedule.js","Components/Login/login.js","Components/Home.jsx","Components/About.jsx","Components/RoutesApp.js","Components/Login/useToken.jsx","reportWebVitals.js","index.js"],"names":["Navigation","className","to","Footer","class","locales","require","DnDCalendar","withDragAndDrop","Calendar","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","Schedule","useState","user","setUser","sessions","data","map","index","course","group","time","end","room","teacher","id","title","start","Date","myEvents","setMyEvents","eventPropGetter","useCallback","event","isDraggable","moveEvent","isAllDay","droppedOnAllDaySlot","allDay","prev","existing","find","ev","filtered","filter","handleSelectSlot","window","prompt","resizeEvent","Dropdown","Toggle","variant","Menu","Item","onClick","events","startAccessor","endAccessor","onEventDrop","onEventResize","onSelectSlot","popup","rezisable","style","height","Login","setToken","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","renderErrorMessage","name","message","database","username","password","token","errors","renderForm","onSubmit","preventDefault","document","forms","uname","pass","userData","value","type","required","Home","About","src","alt","RoutesApp","tokenString","sessionStorage","getItem","userToken","JSON","getToken","setItem","stringify","useToken","exact","path","element","propTypes","PropTypes","func","isRequired","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8fe19242.chunk.js","sourcesContent":["import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"navigation\">\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">\r\n                        The Scheduler\r\n                    </NavLink>\r\n                    <div>\r\n                        <p className=\"text-white\"> The Scheduling Tool for\r\n                         Aboa Mare, Novia and Axxell\r\n                        </p>\r\n                    </div>\r\n                    <div>\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/\">\r\n                                    Home\r\n                                    <span className=\"sr-only\">(current)</span>\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink className=\"nav-link\" to=\"/about\">\r\n                                    About\r\n                                </NavLink>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <footer class=\"py-5 bg-dark fixed-bottom\">\r\n                <div class=\"container\">\r\n                    <p class=\"m-0 text-center text-white\">\r\n                        Copyright &copy; Your Website 2020\r\n                    </p>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, {useCallback, useState} from \"react\";\nimport {Calendar, dateFnsLocalizer, DateLocalizer} from \"react-big-calendar\";\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n//import \"react-big-calendar/lib/sass/styles\";\nimport  data from \"../default.json\";\nimport {Dropdown} from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst DnDCalendar = withDragAndDrop(Calendar)\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\n\nexport default function Schedule({}) {\n    const [user, setUser] = useState(\"Admin\");\n\n    //Map sessions to list format for calendar\n    let sessions = (data.sessions.map(({course,group, time,end, room, teacher},index) => {\n                return {\n                    id: index,\n                    title: course,\n                    start: new Date(time),\n                    end: new Date(end),\n                    room: room,\n                    teacher: teacher,\n                    group: group\n                }\n            }\n        )\n    )\n\n    //Usestate for list so it can be updated\n    const [myEvents, setMyEvents] = useState(sessions)\n\n\n    //Callbacks to interact with the calendar\n    const eventPropGetter = useCallback(\n        (event) => ({\n            ...(event.isDraggable\n                ? { className: 'isDraggable' }\n                : { className: 'nonDraggable' }),\n        }),\n        []\n    )\n\n    const moveEvent = useCallback(\n        ({ event, start, end, isAllDay: droppedOnAllDaySlot = false }) => {\n            const { allDay } = event\n            if (!allDay && droppedOnAllDaySlot) {\n                event.allDay = true\n            }\n\n            setMyEvents((prev) => {\n                const existing = prev.find((ev) => ev.id === event.id) ?? {}\n                const filtered = prev.filter((ev) => ev.id !== event.id)\n                return [...filtered, { ...existing, start, end, allDay }]\n            })\n        },\n        [setMyEvents]\n    )\n\n    const handleSelectSlot = useCallback(\n        ({ start, end }) => {\n            const title = window.prompt('New Event name')\n            if (title) {\n                setMyEvents((prev) => [...prev, { start, end, title }])\n            }\n        },\n        [setMyEvents]\n    )\n\n    const resizeEvent = useCallback(\n        ({ event, start, end }) => {\n            setMyEvents((prev) => {\n                const existing = prev.find((ev) => ev.id === event.id) ?? {}\n                const filtered = prev.filter((ev) => ev.id !== event.id)\n                return [...filtered, { ...existing, start, end }]\n            })\n        },\n        [setMyEvents]\n    )\n\n    //Function to filter the events depending on the user\n    function selectEvents(){\n        if((user === \"Admin\")){\n            return myEvents;\n        }\n        if (user === \"NoviaYr1\") {\n            return myEvents.filter((event) =>\n                event.group === user)\n        }\n        if(user === \"EL\"){\n            return myEvents.filter((event) =>\n                event.teacher === user);\n        }\n        if(user === \"BL\"){\n            return myEvents.filter((event) =>\n                event.teacher === user);\n        }\n    }\n\n\n\n  return (\n      <div>\n          <Dropdown>\n              <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n                  {user}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu>\n                  <Dropdown.Item onClick={() => setUser(\"Admin\")}>Admin</Dropdown.Item>\n                  <Dropdown.Item onClick={() => setUser(\"EL\")}>EL</Dropdown.Item>\n                  <Dropdown.Item onClick={() => setUser(\"BL\")}>BL</Dropdown.Item>\n                  <Dropdown.Item onClick={() => setUser(\"NoviaYr1\")}>Novia 1yr</Dropdown.Item>\n              </Dropdown.Menu>\n          </Dropdown>\n\n        <div className=\"Schedule\">\n          <DnDCalendar\n            localizer={localizer}\n            events={selectEvents()}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            eventPropGetter={eventPropGetter}\n            onEventDrop={moveEvent}\n            onEventResize={resizeEvent}\n            onSelectSlot={handleSelectSlot}\n            popup\n            rezisable\n            style={{ height: 500 }}\n\n          />\n        </div>\n      </div>\n  );\n}\nSchedule.propTypes = {\n    localizer: PropTypes.instanceOf(DateLocalizer),\n}\n\n\n\n","import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\n\r\nexport default function Login({ setToken }) {\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n    const [user, setUser] = useState(\"Admin\");\r\n\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n\r\n    // User Login info\r\n    const database = [\r\n        {\r\n            username: \"admin\",\r\n            password: \"admin\",\r\n            group: \"Admin\"\r\n        },\r\n        {\r\n            username: \"teacher\",\r\n            password: \"teacher\",\r\n            group: \"Teacher\"\r\n        },\r\n        {\r\n            username: \"novia1\",\r\n            password: \"novia1\",\r\n            group: \"Novia1Student\"\r\n        }\r\n    ];\r\n    const token = {token: \"test123\"};\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n\r\n        var { uname, pass } = document.forms[0];\r\n\r\n        // Find user login info\r\n        const userData = database.find((user) => user.username === uname.value);\r\n\r\n        // Compare user info\r\n        if (userData) {\r\n            if (userData.password !== pass.value) {\r\n                // Invalid password\r\n                setErrorMessages({ name: \"pass\", message: errors.pass });\r\n            } else {\r\n                setIsSubmitted(true);\r\n                setToken(token);\r\n            }\r\n        } else {\r\n            // Username not found\r\n            setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n    };\r\n\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container\">\r\n                    <label>Username </label>\r\n                    <input type=\"text\" name=\"uname\" required />\r\n                    {renderErrorMessage(\"uname\")}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <label>Password </label>\r\n                    <input type=\"password\" name=\"pass\" required />\r\n                    {renderErrorMessage(\"pass\")}\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <input type=\"submit\" />\r\n                </div>\r\n            </form>\r\n            <div className=\"testText\">\r\n                <p > Test username: admin</p>\r\n                <p> Test password: admin</p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport Schedule from \"./Schedule\";\r\nimport Login from \"./Login/login\";\r\n\r\n\r\nfunction Home() {\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div class=\"container\">\r\n                <Schedule />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about\">\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center my-5\">\r\n                    <div class=\"col-lg-7\">\r\n                        <img\r\n                            class=\"img-fluid rounded mb-4 mb-lg-0\"\r\n                            src=\"http://placehold.it/900x400\"\r\n                            alt=\"\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col-lg-5\">\r\n                        <h1 class=\"font-weight-light\">About</h1>\r\n                        <p>\r\n                            Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                            industry. Lorem Ipsum has been the industry's standard dummy text\r\n                            ever since the 1500s, when an unknown printer took a galley of\r\n                            type and scrambled it to make a type specimen book.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport {About, Footer, Home, Navigation} from \"./index\";\r\nimport React, {useState} from \"react\";\r\nimport Login from \"./Login/login\";\r\nimport PropTypes from \"prop-types\";\r\nimport useToken from './Login/useToken';\r\n\r\nfunction RoutesApp(){\r\n    const { token, setToken } = useToken();\r\n\r\n    if(!token) {\r\n        return <Login setToken={setToken} />\r\n    }\r\n    return(\r\n            <Router>\r\n                <Navigation />\r\n                <Routes>\r\n                    <Route exact path=\"/login\" element={<Login/>}/>\r\n                    <Route path=\"/\" element={<Home />} />\r\n                    <Route path=\"/about\" element={<About />} />\r\n                </Routes>\r\n                <Footer />\r\n            </Router>\r\n        );\r\n}\r\n\r\nexport default RoutesApp;\r\nLogin.propTypes = {\r\n    setToken: PropTypes.func.isRequired\r\n}","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n    const getToken = () => {\r\n        const tokenString = sessionStorage.getItem('token');\r\n        const userToken = JSON.parse(tokenString);\r\n        return userToken?.token\r\n    };\r\n\r\n    const [token, setToken] = useState(getToken());\r\n\r\n    const saveToken = userToken => {\r\n        sessionStorage.setItem('token', JSON.stringify(userToken));\r\n        setToken(userToken.token);\r\n    };\r\n\r\n    return {\r\n        setToken: saveToken,\r\n        token\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {RoutesApp} from \"./Components\"\nimport reportWebVitals from './reportWebVitals';\nimport Login from \"./Components/Login/login\";\n\nReactDOM.render(\n    <RoutesApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}